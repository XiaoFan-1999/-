public class QuickSort {

	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		//定义一个测试的数组
		int[] arr= {-9,78,0,23,-567,70,-1,900,4561};
		quickSort(arr, 0, arr.length-1);
		
	}
	
	public static void quickSort(int[] arr,int left,int right) {
		int l=left;
		int r=right;
		int temp=0; //存储中间数
		//pivot为中轴值
		int pivot=arr[(left+right)/2];
		
		while(l<r) {
			//找到pivot左边大于等于pivot的值
			while(arr[l]<pivot) {
				l++;
			}
			//找到pivot右边小于等于pivot的值
			while(arr[r]>pivot) {
				r--;
			}
			//如果l>=r,说明pivot的左右两边的值，已经按照左边全部都是
			//小于等于pivot值，右边全部都是大于等于Pivot值
			if(l>=r) {
				break;
			}
			//交换
			temp=arr[l];
			arr[l]=arr[r];
			arr[r]=temp;
			
			//如果交换完成后，发现这个arr[l]==pivot值，r--，前移
			if(arr[l]==pivot) {
				r--;
			}
			//如果交换完成后，发现这个arr[r]==pivot值，l++，后移
			if(arr[r]==pivot) {
				l++;
			}
			System.out.println("arr="+Arrays.toString(arr));
		}
		
		//如果l==r，必须l++,r--，否则会出现栈溢出
		if(l==r) {
			l++;
			r--;
		}
		//向左递归
		if(left<r) {
			quickSort(arr, left, r);
		}
		//向右递归
		if(right>l) {
			quickSort(arr, l, right);
		}
	}

}
